server.address=0.0.0.0
server.port=8080

# Configuracion de la base de datos PostgreSQL - OPTIMIZADA
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de conexiones - REDUCIDO para startup rápido
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.validation-timeout=2000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000
spring.datasource.hikari.leak-detection-threshold=0
spring.datasource.hikari.auto-commit=true

# Configuracion JPA - OPTIMIZADA
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Hibernate - SIMPLIFICADO para startup rápido
spring.jpa.properties.hibernate.order_inserts=false
spring.jpa.properties.hibernate.order_updates=false
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=false
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false

# Cache DESHABILITADO para startup rápido
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Queries - SIMPLIFICADO
spring.jpa.properties.hibernate.default_batch_fetch_size=4
spring.jpa.properties.hibernate.max_fetch_depth=1
spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.jdbc.fetch_size=20

# Servidor web - REDUCIDO
server.tomcat.threads.max=50
server.tomcat.threads.min-spare=5
server.tomcat.connection-timeout=10000
server.tomcat.accept-count=50
server.tomcat.max-connections=200
server.tomcat.processor-cache=100

# Compresión DESHABILITADA para startup rápido
server.compression.enabled=false

# Transacciones - TIMEOUT REDUCIDO
spring.transaction.default-timeout=30

# JWT
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=86400000

# Resend
resend.api.key=${RESEND_API_KEY}
resend.email.from=${RESEND_EMAIL_FROM}

# Logging - MÍNIMO
logging.level.org.springframework.security=ERROR
logging.level.com.tss.tssmanager_backend=ERROR
logging.level.com.tss=ERROR
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.org.springframework.jdbc.core.JdbcTemplate=ERROR
logging.level.org.hibernate=ERROR
logging.level.org.springframework.web=ERROR
logging.level.org.springframework.transaction=ERROR
logging.level.root=ERROR

# Cloudinary
cloudinary.url=${CLOUDINARY_URL}

# Google Drive
google.drive.client.id=${GOOGLE_CLIENT_ID}
google.drive.client.secret=${GOOGLE_CLIENT_SECRET}
google.drive.redirect.uri=${GOOGLE_REDIRECT_URI}

# Copias
copias.storage.path=${COPIAS_STORAGE_PATH}
copias.cleanup.enabled=${COPIAS_CLEANUP_ENABLED}
copias.google-drive.folder-name=${GOOGLE_DRIVE_FOLDER}

# Task scheduling - DESHABILITADO inicialmente
spring.task.scheduling.enabled=false

# Cache - SIMPLIFICADO
spring.cache.type=simple

# Pool de hilos - REDUCIDO
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=4
spring.task.execution.pool.queue-capacity=100
spring.task.execution.pool.keep-alive=30s

# Jackson - OPTIMIZADO
spring.jackson.deserialization.read-unknown-enum-values-as-null=true
spring.jackson.coercion.enum.empty-string=as_null
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false

# HTTP/2 DESHABILITADO para simplicidad
server.http2.enabled=false

# Multipart - REDUCIDO
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# LOB
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Cache resources DESHABILITADO
spring.web.resources.cache.cachecontrol.no-cache=true

# HEALTH CHECK ENDPOINT - CRÍTICO
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.probes.enabled=true
management.server.port=8080

# STARTUP OPTIMIZATION
spring.main.lazy-initialization=true
spring.data.jpa.repositories.bootstrap-mode=lazy
spring.jpa.defer-datasource-initialization=true